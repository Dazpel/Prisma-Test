{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SignIn from './components/signIN/signIn.jsx';\nimport SignUp from './components/signUP/signUp.jsx';\nimport Home from './components/home/Home.jsx';\nimport gql from 'graphql-tag';\nimport { useQuery } from 'react-apollo';\nimport { AUTH_TOKEN } from './constants';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nfunction App() {\n  //SETUP MAIN STATES TO KEEP TRACK, BASIC\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState('');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_USER);\n\n  if (data) {\n    setUser(data.user.name);\n    setLogin(true);\n  } else {\n    console.log('no data');\n  }\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => login ? /*#__PURE__*/React.createElement(Home, {\n      user: user,\n      setUser: setUser,\n      setLogin: setLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/SignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/SignIn\",\n    component: () => /*#__PURE__*/React.createElement(SignIn, {\n      setLogin: setLogin,\n      setUser: setUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/SignUp\",\n    component: () => /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/App.js"],"names":["React","useState","useEffect","SignIn","SignUp","Home","gql","useQuery","AUTH_TOKEN","Switch","Route","Redirect","FETCH_USER","App","login","setLogin","user","setUser","loading","error","data","name","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,MAAMC,UAAU,GAAGN,GAAI;;;;;;;;CAAvB;;AAUA,SAASO,GAAT,GAAe;AAEb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAGC,QAAM;AAAEiB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACK,UAAD,CAAzC;;AAED,MAAIQ,IAAJ,EAAU;AACRH,IAAAA,OAAO,CAACG,IAAI,CAACJ,IAAL,CAAUK,IAAX,CAAP;AACAN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD,MAGO;AACLO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,SAAS,EAAE,MACTT,KAAK,gBACH,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEE,IAAZ;AAAkB,MAAA,OAAO,EAAEC,OAA3B;AAAoC,MAAA,QAAQ,EAAEF,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,gBAGH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,SAAS,EAAE,mBAAM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,QAAlB;AAA4B,MAAA,OAAO,EAAEE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAiBE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAE,mBAAM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SignIn from './components/signIN/signIn.jsx';\nimport SignUp from './components/signUP/signUp.jsx';\nimport Home from './components/home/Home.jsx';\nimport gql from 'graphql-tag';\nimport { useQuery } from 'react-apollo';\nimport { AUTH_TOKEN } from './constants';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nfunction App() {\n\n  //SETUP MAIN STATES TO KEEP TRACK, BASIC\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState('');\n\n\n   const { loading, error, data } = useQuery(FETCH_USER);\n\n  if (data) {\n    setUser(data.user.name)\n    setLogin(true)\n  } else {\n    console.log('no data')\n  }\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={() =>\n          login ? (\n            <Home user={user} setUser={setUser} setLogin={setLogin} />\n          ) : (\n            <Redirect to=\"/SignIn\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/SignIn\"\n        component={() => <SignIn setLogin={setLogin} setUser={setUser} />}\n      />\n      <Route exact path=\"/SignUp\" component={() => <SignUp />} />\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}