{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/components/home/Home.jsx\";\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Loader from '../loader/Loader'; // This query  gets us the Users stored in the DB\n\nconst GET_USERS = gql`\n  {\n    users {\n      name\n      userName\n      email\n    }\n  }\n`;\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n    }\n  }\n`;\nexport default class Home extends Component {\n  render() {\n    // let currentUSer = this.props.user; // get the user name currently logged\n    const logOut = () => {\n      this.props.setLogin(false); // Log user out\n    };\n\n    return /*#__PURE__*/React.createElement(Query, {\n      query: FETCH_USER,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }\n      });\n      if (error) return `Error! ${error.message}`;\n      console.log(data.user.name);\n      return /*#__PURE__*/React.createElement(Query, {\n        query: GET_USERS,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return 'Loading...';\n        if (error) return `Error! ${error.message}`;\n        console.log(data);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, `Welcome, lol`), /*#__PURE__*/React.createElement(\"h4\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, \"The following table contains the current data stored in the Primsa DB\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(TableHead, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TableRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          className: \"bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }\n        }, \"UserName\"), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"bold\",\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"bold\",\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }\n        }, \"Email\"))), /*#__PURE__*/React.createElement(TableBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }, data.user.map((el, i) => /*#__PURE__*/React.createElement(TableRow, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          className: \"bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }\n        }, el.userName), /*#__PURE__*/React.createElement(TableCell, {\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }\n        }, el.name), /*#__PURE__*/React.createElement(TableCell, {\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }\n        }, el.email)))))), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: logOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        }, \"Log Out\")));\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/components/home/Home.jsx"],"names":["React","Component","gql","Query","Table","TableBody","TableCell","TableHead","TableRow","Loader","GET_USERS","FETCH_USER","Home","render","logOut","props","setLogin","loading","error","data","message","console","log","user","name","margin","textAlign","map","el","i","userName","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Loader from '../loader/Loader';\n\n// This query  gets us the Users stored in the DB\n\nconst GET_USERS = gql`\n  {\n    users {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n    }\n  }\n`;\n\nexport default class Home extends Component {\n  render() {\n    // let currentUSer = this.props.user; // get the user name currently logged\n\n    const logOut = () => {\n      this.props.setLogin(false); // Log user out\n    };\n\n    return (\n      <Query query={FETCH_USER}>\n        {({ loading, error, data }) => {\n          if (loading) return <Loader />;\n          if (error) return `Error! ${error.message}`;\n          console.log(data.user.name)\n          return (\n            <Query query={GET_USERS}>\n              {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                console.log(data)\n                return (\n                  \n                  <div style={{ margin: '10px' }}>\n                    <h3\n                      style={{ textAlign: 'center' }}\n                    >{`Welcome, lol`}</h3>\n                    <h4 style={{ textAlign: 'left' }}>\n                      The following table contains the current data stored in\n                      the Primsa DB\n                    </h4>\n                    <div style={{ margin: '10px 0 0 0' }}>\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell className=\"bold\">UserName</TableCell>\n                            <TableCell className=\"bold\" align=\"right\">\n                              Name\n                            </TableCell>\n                            <TableCell className=\"bold\" align=\"right\">\n                              Email\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {data.user.map((el, i) => (\n                            <TableRow key={i}>\n                              <TableCell className=\"bold\">\n                                {el.userName}\n                              </TableCell>\n                              <TableCell align=\"right\">{el.name}</TableCell>\n                              <TableCell align=\"right\">{el.email}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </div>\n                    <div style={{ margin: '10px' }}>\n                      <button onClick={logOut}>Log Out</button>\n                    </div>\n                  </div>\n                );\n              }}\n            </Query>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}