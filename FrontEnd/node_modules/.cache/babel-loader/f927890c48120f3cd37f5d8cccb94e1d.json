{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/components/home/Home.jsx\";\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query, useQuery } from 'react-apollo';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Loader from '../loader/Loader'; // This query  gets us the Users stored in the DB\n\nconst GET_USERS = gql`\n  {\n    users {\n      name\n      userName\n      email\n    }\n  }\n`;\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\nexport default function Home({\n  user,\n  setLogin\n}) {\n  // let currentUSer = this.props.user; // get the user name currently logged\n  const logOut = () => {// this.props.setLogin(false); // Log user out\n  };\n\n  const {\n    loading,\n    error,\n    data: isData\n  } = useQuery(FETCH_USER); //On load get User from token authentication\n\n  if (loading) return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  });\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/React.createElement(Query, {\n    query: GET_USERS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    });\n    if (error) return `Error! ${error.message}`; //If successfull authenticated, retrieve database users\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, `Welcome, ${isData.user.name}`), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"The following table contains the current data stored in the Primsa DB\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"bold\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"bold\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, data.users.map((el, i) => /*#__PURE__*/React.createElement(TableRow, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, el.userName), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, el.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, el.email)))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: logOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Log Out\")));\n  });\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/components/home/Home.jsx"],"names":["React","Component","gql","Query","useQuery","Table","TableBody","TableCell","TableHead","TableRow","Loader","GET_USERS","FETCH_USER","Home","user","setLogin","logOut","loading","error","data","isData","message","margin","textAlign","name","users","map","el","i","userName","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query, useQuery } from 'react-apollo';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Loader from '../loader/Loader';\n\n// This query  gets us the Users stored in the DB\n\nconst GET_USERS = gql`\n  {\n    users {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nexport default function Home({ user, setLogin }) {\n  // let currentUSer = this.props.user; // get the user name currently logged\n\n  const logOut = () => {\n    // this.props.setLogin(false); // Log user out\n  };\n\n  const { loading, error, data: isData } = useQuery(FETCH_USER);        //On load get User from token authentication\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n  return (\n    <Query query={GET_USERS}>                                           \n      {({ loading, error, data }) => {\n        if (loading) return <Loader />;\n        if (error) return `Error! ${error.message}`;\n\n//If successfull authenticated, retrieve database users\n\n        return (\n          <div style={{ margin: '10px' }}>\n            <h3\n              style={{ textAlign: 'center' }}\n            >{`Welcome, ${isData.user.name}`}</h3>\n            <h4 style={{ textAlign: 'left' }}>\n              The following table contains the current data stored in the Primsa\n              DB\n            </h4>\n            <div style={{ margin: '10px 0 0 0' }}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell className=\"bold\">UserName</TableCell>\n                    <TableCell className=\"bold\" align=\"right\">\n                      Name\n                    </TableCell>\n                    <TableCell className=\"bold\" align=\"right\">\n                      Email\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.users.map((el, i) => (\n                    <TableRow key={i}>\n                      <TableCell className=\"bold\">{el.userName}</TableCell>\n                      <TableCell align=\"right\">{el.name}</TableCell>\n                      <TableCell align=\"right\">{el.email}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n            <div style={{ margin: '10px' }}>\n              <button onClick={logOut}>Log Out</button>\n            </div>\n          </div>\n        );\n      }}\n    </Query>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}