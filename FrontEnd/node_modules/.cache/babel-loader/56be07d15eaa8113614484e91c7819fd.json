{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Projects2020/StageWood Test/client/src/components/LinkList.js\";\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nconst FEED_QUERY = gql`\n  {\n    feed {\n      links {\n        id\n        createdAt\n        url\n        description\n      }\n    }\n  }\n`;\n\nclass LinkList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Query, {\n      query: FEED_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }\n      }, \"Fetching\");\n      if (error) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 31\n        }\n      }, \"Error\");\n      const linksToRender = data.feed.links;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, linksToRender.map(link => {\n        link;\n      }));\n    });\n  }\n\n}\n\nexport default LinkList;","map":{"version":3,"sources":["/home/alexander/Desktop/Projects2020/StageWood Test/client/src/components/LinkList.js"],"names":["React","Component","Query","gql","FEED_QUERY","LinkList","render","loading","error","data","linksToRender","feed","links","map","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,UAAU,GAAGD,GAAI;;;;;;;;;;;CAAvB;;AAaA,MAAME,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEG,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,YAAME,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAhC;AAEA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,aAAa,CAACG,GAAd,CAAkBC,IAAI,IAAI;AAACA,QAAAA,IAAI;AAAC,OAAhC,CADH,CADF;AAKD,KAZH,CADF;AAgBD;;AAlB4B;;AAqBjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst FEED_QUERY = gql`\n  {\n    feed {\n      links {\n        id\n        createdAt\n        url\n        description\n      }\n    }\n  }\n`\n\nclass LinkList extends Component {\n    render() {\n      return (\n        <Query query={FEED_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <div>Fetching</div>\n            if (error) return <div>Error</div>\n      \n            const linksToRender = data.feed.links\n      \n            return (\n              <div>\n                {linksToRender.map(link => {link})}\n              </div>\n            )\n          }}\n        </Query>\n      )\n    }\n  }\n\nexport default LinkList"]},"metadata":{},"sourceType":"module"}