{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SignIn from './components/signIN/signIn.jsx';\nimport SignUp from './components/signUP/signUp.jsx';\nimport Home from './components/home/Home.jsx';\nimport gql from 'graphql-tag';\nimport { useQuery } from 'react-apollo';\nimport { AUTH_TOKEN } from './constants';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nfunction App() {\n  let test = useQuery(FETCH_USER);\n\n  if (!test.loading) {\n    console.log(test);\n    const {\n      name\n    } = test.data.user;\n    setUser(name);\n    setLogin(true);\n  } //SETUP MAIN STATES TO KEEP TRACK, BASIC\n\n\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState('');\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => login ? /*#__PURE__*/React.createElement(Home, {\n      user: user,\n      setUser: setUser,\n      setLogin: setLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/SignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/SignIn\",\n    component: () => /*#__PURE__*/React.createElement(SignIn, {\n      setLogin: setLogin,\n      setUser: setUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/SignUp\",\n    component: () => /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alexander/Desktop/Projects2020/StageWood Test/Prisma-Test/FrontEnd/src/App.js"],"names":["React","useState","useEffect","SignIn","SignUp","Home","gql","useQuery","AUTH_TOKEN","Switch","Route","Redirect","FETCH_USER","App","test","loading","console","log","name","data","user","setUser","setLogin","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,MAAMC,UAAU,GAAGN,GAAI;;;;;;;;CAAvB;;AAUA,SAASO,GAAT,GAAe;AACb,MAAIC,IAAI,GAAGP,QAAQ,CAACK,UAAD,CAAnB;;AAEA,MAAI,CAACE,IAAI,CAACC,OAAV,EAAmB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAWJ,IAAI,CAACK,IAAL,CAAUC,IAA3B;AACAC,IAAAA,OAAO,CAACH,IAAD,CAAP;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GARY,CAUb;;;AACA,QAAM,CAACC,KAAD,EAAQD,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,SAAS,EAAE,MACTsB,KAAK,gBACH,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,IAAZ;AAAkB,MAAA,OAAO,EAAEC,OAA3B;AAAoC,MAAA,QAAQ,EAAEC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,gBAGH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,SAAS,EAAE,mBAAM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,QAAlB;AAA4B,MAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAiBE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAE,mBAAM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SignIn from './components/signIN/signIn.jsx';\nimport SignUp from './components/signUP/signUp.jsx';\nimport Home from './components/home/Home.jsx';\nimport gql from 'graphql-tag';\nimport { useQuery } from 'react-apollo';\nimport { AUTH_TOKEN } from './constants';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst FETCH_USER = gql`\n  {\n    user {\n      name\n      userName\n      email\n    }\n  }\n`;\n\nfunction App() {\n  let test = useQuery(FETCH_USER);\n\n  if (!test.loading) {\n    console.log(test);\n    const { name } = test.data.user;\n    setUser(name);\n    setLogin(true);\n  }\n\n  //SETUP MAIN STATES TO KEEP TRACK, BASIC\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState('');\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={() =>\n          login ? (\n            <Home user={user} setUser={setUser} setLogin={setLogin} />\n          ) : (\n            <Redirect to=\"/SignIn\" />\n          )\n        }\n      />\n      <Route\n        exact\n        path=\"/SignIn\"\n        component={() => <SignIn setLogin={setLogin} setUser={setUser} />}\n      />\n      <Route exact path=\"/SignUp\" component={() => <SignUp />} />\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}